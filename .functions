#------------------------------------------////
# Functions and Scripts:
#------------------------------------------////

# Attach strace to all processes matching the given process name
straceall () {
        ps -ef | grep $1 | awk '{ print "-p " $2}' | xargs strace -v -s 100
}

# Useful extract feature so you don't have to remember the arguments to extract
# all of the various archive formats
extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1       ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file!"
   fi
 }

# Parent process ID
ppid () {
        ps -p ${1:-$$} -o ppid=;
}

# Create a new directory and enter it
function mkd() {
	mkdir -p "$@" && cd "$@"
}

# Search for a process
function psgrep() {
        ps -ef | grep $1 | grep -v grep
}

# GitHub clone
function gh() {
        git clone git@github.com:$1.git
}

# ssh login without loginpass
function ssh_login()
{
		if [ $# -ne 1 ]
		then
			echo "Waiting host name to login in."
			return 1
		fi
		host=$1
		if [ ! -f ~/.ssh/pw/*@${host} ]
		then
			echo "Encrypted password file ~/.ssh/pw/*@${host} not exists"
			return 1	
		fi
		fullname=`basename $(ls  ~/.ssh/pw/*@${host})`
		user=`echo $fullname | cut -d \@ -f1`
		echo Login host[${host}] user: ${user}  fullname: ${fullname}
		sshpass -p $(openssl rsautl -inkey ~/.ssh/key -decrypt < ~/.ssh/pw/*@${host} ) ssh ${user}@${host}
}

# scp without login
function sshpass_scp() 
{
		if [ $# -ne 2 ]
		then
			echo "Waiting src and dst to copy files. Args:$@"
			return 1
		fi
		src=$1
		dst=$2
	
		dst_host=${dst%%:*}
		dst_host=${dst_host##*@}
		if [ "${dst_host}" = "${dst}" ]
		then
			echo "Host name not found: $dst"
			return 1	
		fi

		#echo src=$src dst=$dst host=$dst_host	

		exp="sshpass -p $(openssl rsautl -inkey ~/.ssh/key -decrypt < ~/.ssh/pw/*@${dst_host} ) scp -pr ${src} ${dst}"
		#echo $exp
		eval $exp
}

# vim: set filetype=sh:
